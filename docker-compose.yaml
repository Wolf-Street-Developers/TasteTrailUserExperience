services:
  user-postgres:
    image: postgres:latest
    container_name: user-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "9500:${POSTGRES_PORT}"
    networks:
      - user_exp
    volumes:
      - user_exp_data:/var/lib/postgresql/data
    restart: always

  user-api:
    image: user_api
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-api
    environment:
      ASPNETCORE_URLS: http://+:80
      POSTGRES_CONNECTION_STRING: "Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB};Pooling=true;"

      JWT_KEY: "${JWT_KEY}"
      JWT_LIFE_TIME_IN_MINUTES: "${JWT_LIFE_TIME_IN_MINUTES}"
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}

    depends_on:
      - user-postgres
    ports:
      - "9000:80"
    networks:
      - user_exp
    restart: always


volumes:
  user_exp_data:

networks:
  user_exp:
    driver: bridge
